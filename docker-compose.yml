services:
  postgres:
    image: postgres:14-alpine
    container_name: desafio-stoix-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-tasks}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - desafio-stoix-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
      target: production
    container_name: desafio-stoix-backend
    restart: unless-stopped
    ports:
      - "${PORT:-4000}:4000"
    environment:
      PORT: ${PORT:-4000}
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:${POSTGRES_PORT:-5432}/${POSTGRES_DB:-tasks}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-tasks}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN:-http://localhost:5173}
    networks:
      - desafio-stoix-network
    depends_on:
      postgres:
        condition: service_healthy

networks:
  desafio-stoix-network:
    driver: bridge

volumes:
  postgres_data:
